{"version":3,"sources":["components/Squares/index.jsx","App.jsx","index.jsx"],"names":["Squares","props","initialWidth","initialHeight","cellSize","component","React","createRef","sizeStyle","width","height","fontSize","componentInfo","currentPositionX","currentPositionY","setPosition","x","y","square","querySelector","margin","parseInt","getComputedStyle","subRow","subColumn","style","marginLeft","offsetWidth","marginTop","offsetHeight","setVisibility","value","squareBox","valueRow","children","length","valueColumn","transition","visibility","modifyBox","action","target","column","document","createElement","classList","add","j","append","addColumn","removeChild","i","modifyRow","allSquares","result","squaresInColumn","push","key","className","createSquares","setTimeout","current","onMouseOver","event","previous","relatedTarget","parent","parentElement","gParent","calculatePosition","ref","type","onClick","defaultProps","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.64a7330e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nfunction Squares(props) {\n  const { initialWidth, initialHeight, cellSize } = props;\n  let component = React.createRef();\n  const sizeStyle = {\n    width: `${cellSize}px`,\n    height: `${cellSize}px`,\n    fontSize: `${cellSize / 2}px`,\n  };\n  const componentInfo = {\n    currentPositionX: 0,\n    currentPositionY: 0,\n  };\n\n  function createSquares(width, height, style) {\n    const result = [];\n    for (let i = 0; i < width; i += 1) {\n      const squaresInColumn = [];\n      for (let j = 0; j < height; j += 1) {\n        squaresInColumn.push(\n          <div\n            key={`x${j}-${i}`}\n            className={`square x${j}`}\n            style={style}\n          />,\n        );\n      }\n      result.push(\n        <div key={`y${i}`} className=\"y\">\n          {\n            squaresInColumn\n          }\n        </div>,\n      );\n    }\n    return result;\n  }\n\n  function setPosition(...coords) {\n    const x = coords[0] === -1 ? 0 : coords[0];\n    const y = coords[1] === -1 ? 0 : coords[1];\n    const square = component.querySelector('.square');\n    const margin = parseInt(getComputedStyle(square).margin, 10);\n    const subRow = component.querySelector('.sub.row');\n    const subColumn = component.querySelector('.sub.column');\n    subColumn.style.marginLeft = `${(x + 1) * (square.offsetWidth + margin * 2) + 2}px`;\n    subRow.style.marginTop = `${y * (square.offsetHeight + margin)}px`;\n    subColumn.style.marginLeft = `${(x + 1) * (square.offsetWidth + margin * 2) + 2}px`;\n  }\n\n  function calculatePosition(event) {\n    const square = event.target;\n    const parent = square.parentElement;\n    const gParent = parent.parentElement;\n    let y = 0;\n    let x = 0;\n    for (let i = 0; i < parent.children.length; i += 1) {\n      if (parent.children[i] === square) y = i;\n    }\n    for (let j = 0; j < gParent.children.length; j += 1) {\n      if (gParent.children[j] === parent) x = j;\n    }\n    setPosition(x, y);\n  }\n\n  function setVisibility(value) {\n    const squareBox = component.querySelector('.squareBox');\n    const valueRow = squareBox.children[0].children.length === 1 ? 'hidden' : value;\n    const valueColumn = squareBox.children.length === 1 ? 'hidden' : value;\n    const subRow = component.querySelector('.sub.row');\n    const subColumn = component.querySelector('.sub.column');\n    subRow.style.transition = valueRow === 'hidden' ? 'none' : 'margin 0.5s';\n    subColumn.style.transition = valueColumn === 'hidden' ? 'none' : 'margin 0.5s';\n    subColumn.style.visibility = valueColumn;\n    subRow.style.visibility = valueRow;\n  }\n\n  function changeButtonPosition(event) {\n    const previous = event.relatedTarget ? event.relatedTarget.classList[0] : '';\n    switch (event.target.classList[0]) {\n    case 'square': calculatePosition(event);\n      setVisibility('visible'); break;\n    case 'squareBox': break;\n    case 'y': break;\n    case 'modSquare':\n      if (previous === 'squareBox' || previous === 'square' || previous === 'y') {\n        setVisibility('visible');\n      } else setVisibility('hidden');\n      break;\n    default: setVisibility('hidden'); break;\n    }\n  }\n\n  function addColumn(squareBox) {\n    componentInfo.y += 1;\n    const column = document.createElement('div');\n    column.classList.add('y');\n    for (let j = 0; j < squareBox.children[0].children.length; j += 1) {\n      const square = document.createElement('div');\n      square.classList.add('square');\n      square.style.width = sizeStyle.width;\n      square.style.height = sizeStyle.height;\n      column.append(square);\n    }\n    squareBox.append(column);\n  }\n\n  function modifyRow(squareBox, action) {\n    for (let i = 0; i < squareBox.children.length; i += 1) {\n      if (action === 'add') {\n        const square = document.createElement('div');\n        square.classList.add('square');\n        square.style.width = sizeStyle.width;\n        square.style.height = sizeStyle.height;\n        squareBox.children[i].append(square);\n      } else {\n        squareBox.children[i]\n          .removeChild(\n            squareBox.children[i].children[componentInfo.currentPositionY],\n          );\n        componentInfo.x -= 1;\n        if (componentInfo.currentPositionY === i) {\n          setPosition(i - 1, componentInfo.currentPositionX);\n        }\n      }\n    }\n  }\n\n  function modifyBox(action, target) {\n    const squareBox = component.querySelector('.squareBox');\n    if (target === 'column') {\n      if (action === 'add') {\n        addColumn(squareBox);\n      } else {\n        squareBox.removeChild(squareBox.children[componentInfo.currentPositionX]);\n      }\n    } else {\n      modifyRow(squareBox, action);\n    }\n    setVisibility('hidden');\n  }\n\n  const allSquares = createSquares(initialWidth, initialHeight, sizeStyle);\n  setTimeout(() => { component = component.current; });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"squareCustomComponent\"\n      onMouseOver={changeButtonPosition}\n      ref={component}\n    >\n      <button\n        type=\"button\"\n        className=\"modSquare sub column\"\n        style={sizeStyle}\n        onClick={() => modifyBox('sub', 'column')}\n      >\n        -\n      </button>\n      <div className=\"medium\">\n        <button\n          type=\"button\"\n          className=\"modSquare sub row\"\n          style={sizeStyle}\n          onClick={() => modifyBox('sub', 'row')}\n        >\n          -\n        </button>\n        <div className=\"squareBox\">\n          {\n            allSquares\n          }\n        </div>\n        <button\n          type=\"button\"\n          className=\"modSquare add column\"\n          style={sizeStyle}\n          onClick={() => modifyBox('add', 'column')}\n        >\n          +\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        className=\"modSquare add row\"\n        style={\n          {\n            ...sizeStyle,\n            marginLeft: `${cellSize + 4}px`,\n          }\n        }\n        onClick={() => modifyBox('add', 'row')}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nSquares.defaultProps = {\n  initialHeight: 4,\n  initialWidth: 4,\n  cellSize: 50,\n};\n\nSquares.propTypes = {\n  initialHeight: PropTypes.number,\n  initialWidth: PropTypes.number,\n  cellSize: PropTypes.number,\n};\n\nexport default Squares;\n","import React from 'react';\nimport Squares from './components/Squares';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Squares initialHeight={6} />\n      <Squares initialWidth={8} />\n      <Squares cellSize={30} />\n      <Squares />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}