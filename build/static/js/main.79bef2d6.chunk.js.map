{"version":3,"sources":["components/Squares/index.jsx","App.jsx","index.jsx"],"names":["Squares","props","initialWidth","initialHeight","cellSize","component","React","createRef","sizeStyle","width","height","fontSize","componentInfo","currentPositionX","currentPositionY","calculatePosition","event","square","target","parent","parentElement","gParent","y","x","i","children","length","j","querySelector","margin","parseInt","getComputedStyle","subRow","subColumn","style","marginLeft","offsetWidth","marginTop","offsetHeight","setPosition","setVisibility","value","squareBox","valueRow","valueColumn","transition","visibility","modifyBox","action","column","document","createElement","classList","add","append","addColumn","removeChild","modifyRow","allSquares","result","squaresInColumn","push","key","className","createSquares","setTimeout","current","onMouseOver","previous","relatedTarget","ref","type","onClick","defaultProps","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.79bef2d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nfunction Squares(props) {\n  const { initialWidth, initialHeight, cellSize } = props;\n  let component = React.createRef();\n  const sizeStyle = {\n    width: `${cellSize}px`,\n    height: `${cellSize}px`,\n    fontSize: `${cellSize / 2}px`,\n  };\n  const componentInfo = {\n    currentPositionX: 0,\n    currentPositionY: 0,\n  };\n\n  function createSquares(width, height, style) {\n    const result = [];\n    for (let i = 0; i < width; i += 1) {\n      const squaresInColumn = [];\n      for (let j = 0; j < height; j += 1) {\n        squaresInColumn.push(\n          <div\n            key={`x${j}-${i}`}\n            className={`square x${j}`}\n            style={style}\n          />,\n        );\n      }\n      result.push(\n        <div key={`y${i}`} className=\"y\">\n          {\n            squaresInColumn\n          }\n        </div>,\n      );\n    }\n    return result;\n  }\n\n  function setPosition(...coords) {\n    const x = coords[0] === -1 ? 0 : coords[0];\n    const y = coords[1] === -1 ? 0 : coords[1];\n    const square = component.querySelector('.square');\n    const margin = parseInt(getComputedStyle(square).margin, 10);\n    const subRow = component.querySelector('.sub.row');\n    const subColumn = component.querySelector('.sub.column');\n    subColumn.style.marginLeft = `${(x + 1) * (square.offsetWidth + margin * 2) + 2}px`;\n    subRow.style.marginTop = `${y * (square.offsetHeight + margin)}px`;\n    subColumn.style.marginLeft = `${(x + 1) * (square.offsetWidth + margin * 2) + 2}px`;\n  }\n\n  function calculatePosition(event) {\n    const square = event.target;\n    const parent = square.parentElement;\n    const gParent = parent.parentElement;\n    let y = 0;\n    let x = 0;\n    for (let i = 0; i < parent.children.length; i += 1) {\n      if (parent.children[i] === square) y = i;\n    }\n    for (let j = 0; j < gParent.children.length; j += 1) {\n      if (gParent.children[j] === parent) x = j;\n    }\n    setPosition(x, y);\n  }\n\n  function setVisibility(value) {\n    const squareBox = component.querySelector('.squareBox');\n    const valueRow = squareBox.children[0].children.length === 1 ? 'hidden' : value;\n    const valueColumn = squareBox.children.length === 1 ? 'hidden' : value;\n    const subRow = component.querySelector('.sub.row');\n    const subColumn = component.querySelector('.sub.column');\n    subRow.style.transition = valueRow === 'hidden' ? 'none' : 'margin 0.5s';\n    subColumn.style.transition = valueColumn === 'hidden' ? 'none' : 'margin 0.5s';\n    subColumn.style.visibility = valueColumn;\n    subRow.style.visibility = valueRow;\n  }\n\n  function changeButtonPosition(event) {\n    const previous = event.relatedTarget ? event.relatedTarget.classList[0] : '';\n    switch (event.target.classList[0]) {\n    case 'square': calculatePosition(event);\n      setVisibility('visible'); break;\n    case 'squareBox': break;\n    case 'y': break;\n    case 'modSquare':\n      if (previous === 'squareBox' || previous === 'square' || previous === 'y') {\n        setVisibility('visible');\n      } else setVisibility('hidden');\n      break;\n    default: setVisibility('hidden'); break;\n    }\n  }\n\n  function addColumn(squareBox) {\n    componentInfo.y += 1;\n    const column = document.createElement('div');\n    column.classList.add('y');\n    for (let j = 0; j < squareBox.children[0].children.length; j += 1) {\n      const square = document.createElement('div');\n      square.classList.add('square');\n      square.style.width = sizeStyle.width;\n      square.style.height = sizeStyle.height;\n      column.append(square);\n    }\n    squareBox.append(column);\n  }\n\n  function modifyRow(squareBox, action) {\n    for (let i = 0; i < squareBox.children.length; i += 1) {\n      if (action === 'add') {\n        const square = document.createElement('div');\n        square.classList.add('square');\n        square.style.width = sizeStyle.width;\n        square.style.height = sizeStyle.height;\n        squareBox.children[i].append(square);\n      } else {\n        squareBox.children[i]\n          .removeChild(\n            squareBox.children[i].children[componentInfo.currentPositionY],\n          );\n        componentInfo.x -= 1;\n      }\n    }\n  }\n\n  function modifyBox(action, target) {\n    const squareBox = component.querySelector('.squareBox');\n    if (target === 'column') {\n      if (action === 'add') {\n        addColumn(squareBox);\n      } else {\n        squareBox.removeChild(squareBox.children[componentInfo.currentPositionX]);\n      }\n    } else {\n      modifyRow(squareBox, action);\n    }\n    setVisibility('hidden');\n  }\n\n  const allSquares = createSquares(initialWidth, initialHeight, sizeStyle);\n  setTimeout(() => { component = component.current; });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"root\"\n      onMouseOver={changeButtonPosition}\n      ref={component}\n    >\n      <button\n        type=\"button\"\n        className=\"modSquare sub column\"\n        style={sizeStyle}\n        onClick={() => modifyBox('sub', 'column')}\n      >\n        -\n      </button>\n      <div className=\"medium\">\n        <button\n          type=\"button\"\n          className=\"modSquare sub row\"\n          style={sizeStyle}\n          onClick={() => modifyBox('sub', 'row')}\n        >\n          -\n        </button>\n        <div className=\"squareBox\">\n          {\n            allSquares\n          }\n        </div>\n        <button\n          type=\"button\"\n          className=\"modSquare add column\"\n          style={sizeStyle}\n          onClick={() => modifyBox('add', 'column')}\n        >\n          +\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        className=\"modSquare add row\"\n        style={\n          {\n            ...sizeStyle,\n            marginLeft: `${cellSize + 4}px`,\n          }\n        }\n        onClick={() => modifyBox('add', 'row')}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nSquares.defaultProps = {\n  initialHeight: 4,\n  initialWidth: 4,\n  cellSize: 50,\n};\n\nSquares.propTypes = {\n  initialHeight: PropTypes.number,\n  initialWidth: PropTypes.number,\n  cellSize: PropTypes.number,\n};\n\nexport default Squares;\n","import React from 'react';\nimport Squares from './components/Squares';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Squares initialHeight={6} />\n      <Squares initialWidth={8} />\n      <Squares cellSize={30} />\n      <Squares />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}